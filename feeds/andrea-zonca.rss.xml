<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Andrea Zonca's blog - Andrea Zonca</title><link>http://zonca.github.io/</link><description></description><lastBuildDate>Fri, 03 Feb 2017 18:00:00 -0800</lastBuildDate><item><title>Automated deployment of Jupyterhub with Ansible</title><link>http://zonca.github.io/2017/02/automated-deployment-jupyterhub-ansible.html</link><description>&lt;p&gt;Last year I wrote some tutorials on simple deployments of Jupyterhub on Ubuntu 16.04 on the OpenStack deployment &lt;a href="http://www.sdsc.edu/services/it/cloud.html"&gt;SDSC Cloud&lt;/a&gt;, even if most of the steps would also be suitable on other resources like Amazon EC2.&lt;/p&gt;
&lt;p&gt;In more detail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zonca.github.io/2016/04/jupyterhub-sdsc-cloud.html"&gt;Manually installing Jupyterhub on a single Virtual Machine with users …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 03 Feb 2017 18:00:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2017-02-03:/2017/02/automated-deployment-jupyterhub-ansible.html</guid><category>jupyterhub</category><category>ansible</category><category>sdsc</category></item><item><title>How to publish your research software to Github</title><link>http://zonca.github.io/2017/02/publish-research-software-github.html</link><description>&lt;ul&gt;
&lt;li&gt;Do you want to make your research software available publicly on Github?&lt;/li&gt;
&lt;li&gt;Has your reviewer asked to publish the code described in your paper?&lt;/li&gt;
&lt;li&gt;Would you like to collaborate on your research software with other people, either local or remote?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nowadays many journals require that the software used to produce …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 01 Feb 2017 18:00:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2017-02-01:/2017/02/publish-research-software-github.html</guid><category>git</category><category>github</category><category>software-carpentry</category></item><item><title>Run Ubuntu in HPC with Singularity</title><link>http://zonca.github.io/2017/01/singularity-hpc-comet.html</link><description>&lt;ul&gt;
&lt;li&gt;Ever wanted to &lt;code&gt;sudo apt install&lt;/code&gt; packages on a Supercomputer?&lt;/li&gt;
&lt;li&gt;Ever wanted to freeze your software environment and reproduce a calculation after some time?&lt;/li&gt;
&lt;li&gt;Ever wanted to dump your software environment to a file and move it to another Supercomputer? or wanted the same software on your laptop and on …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 13 Jan 2017 12:00:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2017-01-13:/2017/01/singularity-hpc-comet.html</guid><category>singularity</category><category>comet</category></item><item><title>Jupyterhub Docker Spawner with GPU support</title><link>http://zonca.github.io/2016/10/dockerspawner-cuda.html</link><description>&lt;p&gt;&lt;a href="https://github.com/jupyterhub/dockerspawner"&gt;Docker Spawner&lt;/a&gt; allows users of Jupyterhub to run Jupyter Notebook inside isolated Docker Containers.
Access to the host NVIDIA GPU was not allowed until NVIDIA release the &lt;a href="https://github.com/NVIDIA/nvidia-docker"&gt;NVIDIA-docker&lt;/a&gt; plugin.&lt;/p&gt;
&lt;h2&gt;Build the Docker image&lt;/h2&gt;
&lt;p&gt;In order to make Jupyerhub work with NVIDIA-docker we need to build a Jupyterhub docker image for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 12 Oct 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2016-10-12:/2016/10/dockerspawner-cuda.html</guid><category>ipython</category><category>jupyterhub</category><category>cuda</category></item><item><title>Jupyterhub deployment on multiple nodes with Docker Swarm</title><link>http://zonca.github.io/2016/05/jupyterhub-docker-swarm.html</link><description>&lt;p&gt;This post is part of a series on deploying Jupyterhub on OpenStack tailored at workshops, in the previous posts I showed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://zonca.github.io/2016/04/jupyterhub-sdsc-cloud.html"&gt;How to deploy a Jupyterhub on a single server with Docker and Python/R/Julia support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://zonca.github.io/2016/04/jupyterhub-image-sdsc-cloud.html"&gt;How to deploy the previous server from a pre-built image and customize it …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 24 May 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2016-05-24:/2016/05/jupyterhub-docker-swarm.html</guid><category>ipython</category><category>jupyterhub</category><category>sdsc</category></item><item><title>Quick Jupyterhub deployment for workshops with pre-built image</title><link>http://zonca.github.io/2016/04/jupyterhub-image-sdsc-cloud.html</link><description>&lt;p&gt;This tutorial explains how to use a OpenStack image I already built to quickly deploy a Jupyterhub Virtual Machine that can provide a good initial setup for a workshop, providing students access to Python 2/3, Julia, R, file editor and terminal with bash.&lt;/p&gt;
&lt;p&gt;For details about building the instance …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 28 Apr 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2016-04-28:/2016/04/jupyterhub-image-sdsc-cloud.html</guid><category>ipython</category><category>jupyterhub</category><category>sdsc</category></item><item><title>Deploy Jupyterhub on a Virtual Machine for a Workshop</title><link>http://zonca.github.io/2016/04/jupyterhub-sdsc-cloud.html</link><description>&lt;p&gt;This tutorial describes the steps to install a Jupyterhub instance on a single machine suitable for hosting a workshop, suitable for having people login with training accounts on Jupyter Notebooks running Python 2/3, R, Julia with also Terminal access on Docker containers.
Details about the setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jupyterhub installed with …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Sat, 16 Apr 2016 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2016-04-16:/2016/04/jupyterhub-sdsc-cloud.html</guid><category>ipython</category><category>jupyterhub</category><category>sdsc</category></item><item><title>Use your own Python installation (kernel) in Jupyterhub</title><link>http://zonca.github.io/2015/10/use-own-python-in-jupyterhub.html</link><description>&lt;p&gt;&lt;strong&gt;Updated February 2017&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You have access to a Jupyterhub server but the Python installation provided does not satisfy your needs,
how to use your own?&lt;/p&gt;
&lt;h2&gt;Install Anaconda&lt;/h2&gt;
&lt;p&gt;If you haven't already your own Python installation on the Jupyterhub server you have access to, you can install Anaconda in your home …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 05 Oct 2015 12:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2015-10-05:/2015/10/use-own-python-in-jupyterhub.html</guid><category>ipython</category><category>jupyterhub</category></item><item><title>IPython/Jupyter notebook setup on NERSC Edison</title><link>http://zonca.github.io/2015/09/ipython-jupyter-notebook-nersc-edison.html</link><description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This tutorial explains the setup to run an IPython Notebook on a computing node on the supercomputer Edison at NERSC and forward its port encrypted with SSH to the browser on a local laptop.
This setup is a bit more complicated than other supercomputers, i.e. see &lt;a href="http://zonca.github.io/2015/09/ipython-jupyter-notebook-sdsc-comet.html"&gt;my tutorial …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 24 Sep 2015 20:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2015-09-24:/2015/09/ipython-jupyter-notebook-nersc-edison.html</guid><category>ipython</category><category>jupyter</category><category>ipython-notebook</category></item><item><title>IPython/Jupyter notebook setup on SDSC Comet</title><link>http://zonca.github.io/2015/09/ipython-jupyter-notebook-sdsc-comet.html</link><description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This tutorial explains the setup to run an IPython Notebook on a computing node on the supercomputer Comet at the San Diego Supercomputer Center and forward the port encrypted with SSH to the browser on a local laptop.&lt;/p&gt;
&lt;h2&gt;Quick reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;module load python scipy&lt;/code&gt; to &lt;code&gt;.bashrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make sure …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 17 Sep 2015 20:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2015-09-17:/2015/09/ipython-jupyter-notebook-sdsc-comet.html</guid><category>ipython</category><category>jupyter</category><category>ipython-notebook</category></item><item><title>Run Jupyterhub on a Supercomputer</title><link>http://zonca.github.io/2015/04/jupyterhub-hpc.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;: I developed a plugin for &lt;a href="https://github.com/jupyter/jupyterhub" title="jupyterhub"&gt;Jupyterhub&lt;/a&gt;: &lt;a href="https://github.com/zonca/remotespawner"&gt;RemoteSpawner&lt;/a&gt;, it has a proof-of-concept interface with the Supercomputer Gordon at UC San Diego to spawn IPython Notebook instances as jobs throught the queue and tunnel the interface back to the Jupyterhub instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The IPython (recently renamed Jupyter) Notebook is a powerful tool …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 02 Apr 2015 09:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2015-04-02:/2015/04/jupyterhub-hpc.html</guid><category>python</category><category>ipython</category><category>jupyterhub</category><category>hpc</category></item><item><title>Accelerate groupby operation on pixels with Numba</title><link>http://zonca.github.io/2015/03/numba-groupby-pixels.html</link><description>&lt;p&gt;&lt;a href="/notebooks/numba_groupby_pixels.ipynb"&gt;Download the original IPython notebook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Astrophysics background&lt;/h2&gt;
&lt;p&gt;It is very common in Astrophysics to work with sky pixels. The sky is tassellated in patches with specific properties and a sky map is then a collection of intensity values for each pixel. The most common pixelization used in Cosmology is &lt;a href="http://healpix.jpl.nasa.gov"&gt;HEALPix …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 24 Mar 2015 09:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2015-03-24:/2015/03/numba-groupby-pixels.html</guid><category>python</category><category>numba</category><category>astrophysics</category></item><item><title>Software Carpentry setup for Chromebook</title><link>http://zonca.github.io/2015/02/software-carpentry-setup-chromebook.html</link><description>&lt;p&gt;In this post I'll provide instructions on how to install the main requirements of a &lt;a href="http://software-carpentry.org"&gt;Software Carpentry workshop&lt;/a&gt; on
a Chromebook.
Bash, git, IPython notebook and R.&lt;/p&gt;
&lt;h2&gt;Switch the Chromebook to Developer mode&lt;/h2&gt;
&lt;p&gt;ChromeOS is very restrictive on what users can install on the machine.
The only way to get …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 10 Feb 2015 20:00:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2015-02-10:/2015/02/software-carpentry-setup-chromebook.html</guid><category>software-carpentry</category><category>chromebook</category><category>ipython</category></item><item><title>Zero based indexing</title><link>http://zonca.github.io/2014/10/zero-based-indexing.html</link><description>&lt;h2&gt;Reads&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dijkstra: &lt;a href="https://www.cs.utexas.edu/~EWD/transcriptions/EWD08xx/EWD831.html"&gt;https://www.cs.utexas.edu/~EWD/transcriptions/EWD08xx/EWD831.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Guido van Rossum: &lt;a href="https://plus.google.com/115212051037621986145/posts/YTUxbXYZyfi"&gt;https://plus.google.com/115212051037621986145/posts/YTUxbXYZyfi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Comment&lt;/h2&gt;
&lt;p&gt;For Europeans zero based indexing feels reasonable if we think of floors in a house,
the lowest floor is ground floor, then 1st floor and so on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 22 Oct 2014 10:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-10-22:/2014/10/zero-based-indexing.html</guid><category>python</category></item><item><title>Write unit tests as cells of IPython notebooks</title><link>http://zonca.github.io/2014/09/unit-tests-ipython-notebook.html</link><description>&lt;h2&gt;What?&lt;/h2&gt;
&lt;p&gt;Plugin for &lt;code&gt;py.test&lt;/code&gt; to write unit tests as cells in IPython notebooks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Homepage on Github: &lt;a href="https://github.com/zonca/pytest-ipynb"&gt;https://github.com/zonca/pytest-ipynb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PyPi : &lt;a href="https://pypi.python.org/pypi/pytest-ipynb/"&gt;https://pypi.python.org/pypi/pytest-ipynb/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install with &lt;code&gt;pip install pytest-ipynb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Why?&lt;/h2&gt;
&lt;p&gt;Many unit testing fromeworks in Python, first of all the &lt;code&gt;unittest&lt;/code&gt; package in the standard …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 30 Sep 2014 14:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-09-30:/2014/09/unit-tests-ipython-notebook.html</guid><category>unit-test</category><category>ipython</category><category>ipython-notebook</category></item><item><title>How to perform code review for scientific software</title><link>http://zonca.github.io/2014/08/code-review-for-scientific-computing.html</link><description>&lt;p&gt;Code review is the formal process where a programmer inspects in detail a piece of software developed by somebody else in order to improve code quality by catching bugs, improve readibility and usability.
It is used extensively in industry, not much in academia.&lt;/p&gt;
&lt;p&gt;There has been some discussion about this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 28 Aug 2014 17:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-08-28:/2014/08/code-review-for-scientific-computing.html</guid><category>github</category><category>git</category><category>openscience</category><category>software-carpentry</category></item><item><title>Create a Github account for your research group with free private repositories</title><link>http://zonca.github.io/2014/08/github-for-research-groups.html</link><description>&lt;p&gt;&lt;a href="https://github.com/"&gt;Github&lt;/a&gt; allows a research group to create their own webpage where they can host, share and develop their software using the &lt;code&gt;git&lt;/code&gt; version control system and the powerful Github online issue-tracking interface.&lt;/p&gt;
&lt;p&gt;Since February 2014 Github also offers 20 private repositories to research groups and classrooms, plus unlimited public repositories …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 19 Aug 2014 15:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-08-19:/2014/08/github-for-research-groups.html</guid><category>github</category><category>git</category><category>openscience</category></item><item><title>Thoughts on a career as a computational scientist</title><link>http://zonca.github.io/2014/06/career-as-a-computational-scientist.html</link><description>&lt;p&gt;Recently I've been asked what are the prospects of a wannabe computational scientist, 
both in terms of training and in terms of job opportunities.&lt;/p&gt;
&lt;p&gt;So I am writing this blog post about my personal experience.&lt;/p&gt;
&lt;h2&gt;What is a computational scientist?&lt;/h2&gt;
&lt;p&gt;In my understanding, a computational scientist is a scientist with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 05 Jun 2014 14:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-06-05:/2014/06/career-as-a-computational-scientist.html</guid><category>career</category><category>hpc</category></item><item><title>Machine learning at scale with Python</title><link>http://zonca.github.io/2014/03/machine-learning-at-scale-with-python.html</link><description>&lt;p&gt;My talk for the San Diego Data Science meetup: &lt;a href="http://www.meetup.com/San-Diego-Data-Science-R-Users-Group/events/170967362/"&gt;http://www.meetup.com/San-Diego-Data-Science-R-Users-Group/events/170967362/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setup &lt;a href="http://star.mit.edu/cluster/"&gt;StarCluster&lt;/a&gt; to launch EC2 instances&lt;/li&gt;
&lt;li&gt;Running IPython Notebook on Amazon EC2&lt;/li&gt;
&lt;li&gt;Running single node Machine Learning jobs using multiple cores&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Distributing jobs with IPython parallel to multiple EC2 instances&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See HTML5 &lt;strong&gt;slides …&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 20 Mar 2014 20:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-03-20:/2014/03/machine-learning-at-scale-with-python.html</guid><category>python</category><category>machine-learning</category></item><item><title>Python on Gordon</title><link>http://zonca.github.io/2014/03/setup-ipython-notebook-parallel-Gordon.html</link><description>&lt;p&gt;Gordon has already a &lt;code&gt;python&lt;/code&gt; environment setup which can be activated by loading the &lt;code&gt;python&lt;/code&gt; module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="c c-Singleline"&gt;# add this to .bashrc to load it at every login&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install virtualenv&lt;/h3&gt;
&lt;p&gt;Then we need to setup a sandboxed local environment to install other packages, by using &lt;code&gt;virtualenv&lt;/code&gt;, get the link …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 20 Mar 2014 19:30:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-03-20:/2014/03/setup-ipython-notebook-parallel-Gordon.html</guid><category>hpc</category><category>python</category><category>Gordon</category></item><item><title>Build Software Carpentry lessons with Pelican</title><link>http://zonca.github.io/2014/02/build-software-carpentry-with-pelican.html</link><description>&lt;p&gt;&lt;a href="http://www.software-carpentry.org"&gt;Software Carpentry&lt;/a&gt; offers bootcamps for scientist to teach basic programming skills.
All the material, mainly about bash, git, Python and R is &lt;a href="http://github.com/swcarpentry/bc"&gt;available on Github&lt;/a&gt; under Creative Commons.&lt;/p&gt;
&lt;p&gt;The content is either in Markdown or in IPython notebook format, and is currently built using Jekyll, nbconvert and Pandoc.
Basicly the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 26 Feb 2014 23:00:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-02-26:/2014/02/build-software-carpentry-with-pelican.html</guid><category>python</category><category>software-carpentry</category><category>pelican</category></item><item><title>openproceedings: Github/FigShare based publishing platform for conference proceedings</title><link>http://zonca.github.io/2014/02/openproceedings-github-figshare-pelican-conference-proceedings.html</link><description>&lt;p&gt;Github provides a great interface for gathering, peer reviewing and accepting papers for conference proceedings, the second step is to publish them on a website either in HTML or PDF form or both.
The Scipy conference is at the forefront on this and did great work in peer reviewing on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 13 Feb 2014 23:30:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-02-13:/2014/02/openproceedings-github-figshare-pelican-conference-proceedings.html</guid><category>python</category><category>pelican</category><category>openscience</category></item><item><title>wget file from google drive</title><link>http://zonca.github.io/2014/01/wget-file-from-google-drive.html</link><description>&lt;p&gt;Sometimes it is useful, even more if you have a chromebook, to upload a file to Google Drive and then use &lt;code&gt;wget&lt;/code&gt; to retrieve it from a server remotely.&lt;/p&gt;
&lt;p&gt;In order to do this you need to make the file available to "Anyone with the link", then click on that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 31 Jan 2014 18:00:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2014-01-31:/2014/01/wget-file-from-google-drive.html</guid><category>bash</category></item><item><title>Run IPython Notebook on a HPC Cluster via PBS</title><link>http://zonca.github.io/2013/12/run-ipython-notebook-on-HPC-cluster-via-PBS.html</link><description>&lt;p&gt;The &lt;a href="http://ipython.org/notebook.html"&gt;IPython notebook&lt;/a&gt; is a great tool for data exploration
and visualization.
It is suitable in particular for analyzing a large amount of data remotely on a computing node
of a HPC cluster and visualize it in a browser that runs on a local machine.
In this configuration, the interface …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 18 Dec 2013 16:30:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-12-18:/2013/12/run-ipython-notebook-on-HPC-cluster-via-PBS.html</guid><category>ipython</category><category>ipython-notebook</category><category>HPC</category></item><item><title>Joining San Diego Supercomputer Center</title><link>http://zonca.github.io/2013/12/joining-sandiego-supercomputer-center.html</link><description>&lt;p&gt;&lt;code&gt;TL;DR&lt;/code&gt;
Left UCSB after 4 years, got staff position at San Diego Supercomputer Center within UCSD, will be helping research groups analyze their data on Gordon and more. Still 20% on Planck.&lt;/p&gt;
&lt;p&gt;I spent 4 great years at UCSB with Peter Meinhold working on analyzing Cosmic Microwave Background data …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 10 Dec 2013 13:30:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-12-10:/2013/12/joining-sandiego-supercomputer-center.html</guid><category>jobs</category></item><item><title>Published paper on Destriping Cosmic Microwave Background Polarimeter data</title><link>http://zonca.github.io/2013/11/published-paper-destriping-CMB-polarimeter.html</link><description>&lt;p&gt;TL;DR version:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preprint on arxiv: &lt;a href="http://arxiv.org/abs/1309.5609"&gt;Destriping Cosmic Microwave Background Polarimeter data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Destriping &lt;code&gt;python&lt;/code&gt; code on github: &lt;a href="https://github.com/zonca/dst"&gt;&lt;code&gt;dst&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Output maps and sample input data on figshare: &lt;a href="http://figshare.com/articles/BMachine_40GHz_CMB_Polarimeter_sky_maps/644507"&gt;BMachine 40GHz CMB Polarimeter sky maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(Paywalled published paper: &lt;a href="http://dx.doi.org/10.1016/j.ascom.2013.10.002"&gt;Destriping Cosmic Microwave Background Polarimeter data&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My last paper was published by &lt;a href="http://www.journals.elsevier.com/astronomy-and-computing/"&gt;Astronomy and Computing …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 20 Nov 2013 21:30:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-11-20:/2013/11/published-paper-destriping-CMB-polarimeter.html</guid><category>python</category><category>paper</category><category>destriping</category><category>openscience</category></item><item><title>Jiffylab multiuser IPython notebooks</title><link>http://zonca.github.io/2013/10/jiffylab-multiuser-ipython-notebooks.html</link><description>&lt;p&gt;&lt;a href="https://github.com/ptone/jiffylab"&gt;jiffylab&lt;/a&gt; is a very interesting project by &lt;a href="https://twitter.com/ptone"&gt;Preston Holmes&lt;/a&gt; to provide sandboxed IPython notebooks instances on a server using &lt;a href="http://www.docker.io/"&gt;docker&lt;/a&gt;.
There are several user cases, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In a tutorial about &lt;code&gt;python&lt;/code&gt;, give users instant access to a working IPython notebook&lt;/li&gt;
&lt;li&gt;In a tutorial about some specific &lt;code&gt;python&lt;/code&gt; package, give …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 14 Oct 2013 10:30:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-10-14:/2013/10/jiffylab-multiuser-ipython-notebooks.html</guid><category>python</category><category>ipython-notebook</category></item><item><title>How to log exceptions in Python</title><link>http://zonca.github.io/2013/10/how-to-log-exceptions-in-python.html</link><description>&lt;p&gt;Sometimes it is useful to just catch any exception, write details to a log file and continue execution.&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;Python&lt;/code&gt; standard library, it is possible to use the &lt;code&gt;logging&lt;/code&gt; and &lt;code&gt;exceptions&lt;/code&gt; modules to achieve this.
First of all, we want to catch any exception, but also being able to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 01 Oct 2013 10:30:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-10-01:/2013/10/how-to-log-exceptions-in-python.html</guid><category>python</category><category>exceptions</category></item><item><title>Google Plus comments plugin for Pelican</title><link>http://zonca.github.io/2013/09/google-plus-comments-plugin-for-pelican.html</link><description>&lt;p&gt;There has been recently several discussions about 
&lt;a href="http://www.popsci.com/science/article/2013-09/why-were-shutting-our-comments"&gt;whether comments are any useful on blogs&lt;/a&gt;
I think it is important to find better ways to connect blogs to social networks.
In my opinion the most suitable social network for this is Google+, because there is space for larger discussion, without Twitter's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 27 Sep 2013 17:45:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-09-27:/2013/09/google-plus-comments-plugin-for-pelican.html</guid><category>python</category><category>pelican</category><category>github</category></item><item><title>How to automatically build your Pelican blog and publish it to Github Pages</title><link>http://zonca.github.io/2013/09/automatically-build-pelican-and-publish-to-github-pages.html</link><description>&lt;p&gt;Something I like a lot about Jekyll, the Github static blog generator, is that you just push commits to your repository and Github takes care of re-building and publishing your website.
Thanks to this, it is possible to create a quick blog post from the Github web interface, without the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 26 Sep 2013 13:45:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-09-26:/2013/09/automatically-build-pelican-and-publish-to-github-pages.html</guid><category>python</category><category>travis-ci</category><category>github</category></item><item><title>clviewer, interactive plot of CMB spectra</title><link>http://zonca.github.io/2013/09/clviewer-interactive-plot-of-CMB-spectra.html</link><description>&lt;p&gt;Today it was HackDay at &lt;a href="http://dotastronomy.com"&gt;.Astronomy&lt;/a&gt;, so I felt compelled to hack something around myself,
creating something I have been thinking for a while after my previous work on &lt;a href="http://zonca.github.io/2013/08/interactive-figures-planck-power-spectra.html"&gt;Interactive CMB power spectra in the browser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The idea is to get text files from a user and load it in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 17 Sep 2013 18:30:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-09-17:/2013/09/clviewer-interactive-plot-of-CMB-spectra.html</guid><category>cosmology</category><category>python</category><category>astrophysics</category><category>Planck</category><category>dotastronomy</category></item><item><title>Planck CMB map at high resolution</title><link>http://zonca.github.io/2013/09/Planck-CMB-map-at-high-resolution.html</link><description>&lt;p&gt;Prompted by a colleague, I created a high-resolution version of the Cosmic Microwave Background map in MollWeide projection released by the Planck collaboration, available on the &lt;a href="http://irsa.ipac.caltech.edu/data/Planck/release_1/all-sky-maps/previews/COM_CompMap_CMB-smica_2048_R1.20/index.html"&gt;Planck Data Release Website&lt;/a&gt; in FITS format.&lt;/p&gt;
&lt;p&gt;The map is a PNG at a resolution of 17469x8796 pixels, which is suitable for printing at …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 10 Sep 2013 14:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-09-10:/2013/09/Planck-CMB-map-at-high-resolution.html</guid><category>cosmology</category><category>python</category><category>astrophysics</category><category>Planck</category></item><item><title>Run Hadoop Python jobs on Amazon with MrJob</title><link>http://zonca.github.io/2013/09/run-hadoop-python-jobs-on-amazon-with-mrjob.html</link><description>&lt;p&gt;&lt;br/&gt;
First we need to install mrjob with:
&lt;br/&gt;
&lt;blockquote class="tr_bq"&gt;
 pip install mrjob
&lt;/blockquote&gt;
I am starting with a simple example of word counting. Previously I implemented this directly using the hadoop streaming interface, therefore mapper and reducer were scripts that read from standard input and print to standard output, see mapper.py and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 02 Sep 2013 02:36:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-09-02:/2013/09/run-hadoop-python-jobs-on-amazon-with-mrjob.html</guid><category>bigdata</category><category>github</category><category>python</category><category>aws</category><category>hadoop</category></item><item><title>Interactive figures in the browser: CMB Power Spectra</title><link>http://zonca.github.io/2013/08/interactive-figures-planck-power-spectra.html</link><description>&lt;p&gt;
 For a long time I've been curious about trying out
 &lt;span style="font-family: Courier New, Courier, monospace;"&gt;
  d3.js
 &lt;/span&gt;
 , the javascript plotting library which is becoming the standard for interactive plotting in the browser.
 &lt;br/&gt;
&lt;/p&gt;

&lt;div&gt;
 &lt;br/&gt;
&lt;/div&gt;

&lt;div&gt;
 What is really appealing is the capability of sharing with other people powerful interactive visualization simply via the link to a web page …&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 30 Aug 2013 08:52:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-08-30:/2013/08/interactive-figures-planck-power-spectra.html</guid><category>javascript</category><category>d3</category><category>power spectra</category><category>astrophysics</category><category>Planck</category></item><item><title>Planck CTP angular power spectrum ell binning</title><link>http://zonca.github.io/2013/08/planck-ctp-angular-power-spectrum-ell.html</link><description>&lt;p&gt;
 Planck released a binning of the angular power spectrum in the Explanatory supplement,
 &lt;br/&gt;
 unfortunately the file is in PDF format, non easily machine-readable:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;a href="http://www.sciops.esa.int/wikiSI/planckpla/index.php?title=Frequency_maps_angular_power_spectra&amp;amp;instance=Planck_Public_PLA"&gt;
  http://www.sciops.esa.int/wikiSI/planckpla/index.php?title=Frequency_maps_angular_power_spectra&amp;amp;instance=Planck_Public_PLA
 &lt;/a&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 So here is a csv version:
 &lt;br/&gt;
 &lt;a href="https://gist.github.com/zonca/6288439"&gt;
  https://gist.github.com/zonca/6288439
 &lt;/a&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 Follows embedded …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 20 Aug 2013 23:03:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-08-20:/2013/08/planck-ctp-angular-power-spectrum-ell.html</guid><category>power spectra</category><category>Planck</category></item><item><title>HEALPix map of the Earth using healpy</title><link>http://zonca.github.io/2013/08/healpix-map-of-earth-using-healpy.html</link><description>&lt;p&gt;
 HEALPix maps can also be used to create equal-area pixelized maps of the Earth, RGB colors are not supported in healpy, so we need to convert the image to colorscale.
 &lt;br/&gt;
 The best user case is for using spherical harmonic transforms, e.g. apply a smoothing filter, in this case HEALPix …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 08 Aug 2013 19:07:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-08-08:/2013/08/healpix-map-of-earth-using-healpy.html</guid></item><item><title>Export google analytics data via API with Python</title><link>http://zonca.github.io/2013/08/export-google-analytics-data-via-api.html</link><description>&lt;p&gt;
 Fun weekend hacking project: export google analytics data using the google APIs.
 &lt;br/&gt;
 &lt;br/&gt;
 Clone the latest version of the API client from:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;a href="https://code.google.com/p/google-api-python-client"&gt;
  https://code.google.com/p/google-api-python-client
 &lt;/a&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 there is an example for accessing analytics APIs in the samples/analytics folder,
 &lt;br/&gt;
 but you need to fill in client_secrets.json.
 &lt;br/&gt;
 &lt;br/&gt;
 You can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Sun, 04 Aug 2013 17:47:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-08-04:/2013/08/export-google-analytics-data-via-api.html</guid><category>python</category></item><item><title>Processing sources in Planck maps with Hadoop and Python</title><link>http://zonca.github.io/2013/07/processing-planck-sources-with-hadoop.html</link><description>&lt;h2&gt;
 Purpose
&lt;/h2&gt;

&lt;div&gt;
 The purpose of this post is to investigate how to process in parallel sources extracted from full sky maps, in this case the maps release by Planck, using Hadoop instead of more traditional MPI-based HPC custom software.
&lt;/div&gt;

&lt;div&gt;
 Hadoop is the MapReduce implementation most used in the enterprise world and …&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 15 Jul 2013 08:16:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-07-15:/2013/07/processing-planck-sources-with-hadoop.html</guid><category>hpc</category><category>supercomputing</category><category>python</category><category>Planck</category><category>hadoop</category></item><item><title>How to use the IPython notebook on a small computing cluster</title><link>http://zonca.github.io/2013/06/how-to-use-ipython-notebook-on-small.html</link><description>&lt;p&gt;&lt;a href="http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html"&gt;The IPython notebook&lt;/a&gt; is a powerful and easy to use interface for using Python and particularly useful when running remotely, because it allows the interface to run locally in your browser, while the computing kernel runs remotely on the cluster.&lt;/p&gt;
&lt;h2&gt;1) Configure IPython notebook:&lt;/h2&gt;
&lt;p&gt;First time you use the notebook …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Sat, 22 Jun 2013 11:12:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-06-22:/2013/06/how-to-use-ipython-notebook-on-small.html</guid><category>hpc</category><category>ipython</category></item><item><title>IPython parallell setup on Carver at NERSC</title><link>http://zonca.github.io/2013/04/ipython-parallell-setup-on-carver-at.html</link><description>&lt;p&gt;
 IPython parallel is one of the easiest ways to spawn several Python sessions on a Supercomputing cluster and process jobs in parallel.
 &lt;br/&gt;
 &lt;br/&gt;
 On Carver, the basic setup is running a controller on the login node, and submit engines to the computing nodes via PBS.
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;a name="more"&gt;
 &lt;/a&gt;
 &lt;br/&gt;
 First create your configuration files running …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 11 Apr 2013 05:53:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-04-11:/2013/04/ipython-parallell-setup-on-carver-at.html</guid><category>hpc</category><category>supercomputing</category><category>ipython</category><category>python</category></item><item><title>Simple Mixin usage in python</title><link>http://zonca.github.io/2013/04/simple-mixin-usage-in-python.html</link><description>&lt;p&gt;
 One situation where Mixins are useful in Python is when you need to modify  a method of similar classes that you are importing from a package.
 &lt;br/&gt;
&lt;/p&gt;

&lt;div&gt;
 &lt;br/&gt;
&lt;/div&gt;

&lt;div&gt;
 For just a single class, it is easier to just create a derived class, but if the same modification must be applied to several …&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 08 Apr 2013 01:34:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-04-08:/2013/04/simple-mixin-usage-in-python.html</guid><category>python</category></item><item><title>Noise in spectra and map domain</title><link>http://zonca.github.io/2013/04/noise-in-spectra-and-map-domain.html</link><description>&lt;h3&gt;
 Spectra
&lt;/h3&gt;

&lt;p&gt;NET or $\sigma$ is the standard deviation of the noise, measured in mK/sqrt(Hz), typical values for microwave amplifiers are 0.2-5.
&lt;br/&gt;
This is the natural unit of the amplitude spectra (ASD), therefore the high frequency tail of the ASD should get to the expected value of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 08 Apr 2013 01:32:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-04-08:/2013/04/noise-in-spectra-and-map-domain.html</guid><category>map</category><category>power spectra</category><category>noise</category></item><item><title>Basic fork/pull git workflow</title><link>http://zonca.github.io/2013/04/basic-forkpull-git-workflow.html</link><description>&lt;div dir="ltr"&gt;
 Typical simple workflow for a (github) repository with few users.
&lt;/div&gt;

&lt;div dir="ltr"&gt;
 &lt;b&gt;
  &lt;br/&gt;
 &lt;/b&gt;
&lt;/div&gt;

&lt;div dir="ltr"&gt;
 &lt;b&gt;
  Permissions configuration:
 &lt;/b&gt;
&lt;/div&gt;

&lt;div dir="ltr"&gt;
 Main developers have write access to the repository, occasional contributor are supposed to fork and create pull requests.
&lt;/div&gt;

&lt;div dir="ltr"&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a name="more"&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;div dir="ltr"&gt;
 &lt;b&gt;
  Main developer:
 &lt;/b&gt;
 Small bug fix just go directly in master:
&lt;/div&gt;
&lt;div dir="ltr"&gt;
 &lt;span style="font-family: Courier New, Courier, monospace;"&gt;
  &lt;br/&gt;
 &lt;/span&gt;
&lt;/div&gt;
&lt;div dir="ltr"&gt;
 &lt;span style="font-family: Courier New, Courier, monospace;"&gt;
  git  checkout master
  &lt;br/&gt;
  # update from repository, better use rebase in …&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Sat, 06 Apr 2013 07:52:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-04-06:/2013/04/basic-forkpull-git-workflow.html</guid><category>git</category><category>github</category></item><item><title>Interactive 3D plot of a sky map</title><link>http://zonca.github.io/2013/03/interactive-3d-plot-of-sky-map.html</link><description>&lt;p&gt;&lt;a href="http://code.enthought.com/projects/mayavi/"&gt;
 Mayavi
&lt;/a&gt;
is a Python package from Enthought for 3D visualization, here a simple example of creating a 3D interactive map starting from a HEALPix pixelization sky map:
&lt;br/&gt;
&lt;div&gt;
 &lt;br/&gt;
 &lt;div&gt;
  &lt;div class="separator" style="clear: both; text-align: center;"&gt;
   &lt;a href="http://zonca.github.io/images/interactive-3d-plot-of-sky-map_s1600_snapshot.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;
    &lt;img border="0" height="271" src="http://zonca.github.io/images/interactive-3d-plot-of-sky-map_s400_snapshot.png" width="400"/&gt;
   &lt;/a&gt;
  &lt;/div&gt;
  &lt;div class="separator" style="clear: both; text-align: center;"&gt;
   &lt;br/&gt;
  &lt;/div&gt;
  &lt;br/&gt;
  &lt;a name="more"&gt;
  &lt;/a&gt;
  &lt;br/&gt;
  Here the code:
  &lt;br/&gt;
  &lt;script src="https://gist.github.com/zonca/5146356.js"&gt;
  &lt;/script&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  The output is a beautiful 3D interactive map, Mayavi allows to pan, zoom and rotate.
  &lt;br/&gt;
  UPDATE 13 Mar: actually there …&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 12 Mar 2013 19:49:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-03-12:/2013/03/interactive-3d-plot-of-sky-map.html</guid><category>mayavi</category><category>python</category><category>astrophysics</category></item><item><title>How to cite HDF5 in bibtex</title><link>http://zonca.github.io/2013/02/how-to-cite-hdf5-in-bibtex.html</link><description>&lt;p&gt;
 here the bibtex entry:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;script src="https://gist.github.com/zonca/5043796.js"&gt;
 &lt;/script&gt;
 &lt;br/&gt;
 reference:
 &lt;br/&gt;
 &lt;a href="http://www.hdfgroup.org/HDF5-FAQ.html#gcite"&gt;
  http://www.hdfgroup.org/HDF5-FAQ.html#gcite
 &lt;/a&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 27 Feb 2013 00:42:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-02-27:/2013/02/how-to-cite-hdf5-in-bibtex.html</guid></item><item><title>Compile healpix C++ to javascript</title><link>http://zonca.github.io/2013/01/tag:blogger.html</link><description>&lt;p&gt;
 Compile C++ -&amp;gt; LLVM with clang
 &lt;br/&gt;
 &lt;br/&gt;
 Convert LLVM -&amp;gt; Javascript:
 &lt;br/&gt;
 &lt;a href="https://github.com/kripken/emscripten/wiki/Tutorial"&gt;
  https://github.com/kripken/emscripten/wiki/Tutorial
 &lt;/a&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 28 Jan 2013 21:06:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-01-28:/2013/01/tag:blogger.html</guid><category>javascript</category><category>hackideas</category><category>healpix</category></item><item><title>Elliptic beams, FWHM and ellipticity</title><link>http://zonca.github.io/2013/01/elliptic-beams-fwhm-and-ellipticity.html</link><description>&lt;p&gt;&lt;span style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 13px;"&gt;
 The relationship between the Full Width Half Max, FWHM (min, max, and average) and the
&lt;/span&gt;
&lt;br/&gt;
&lt;span style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 13px;"&gt;
 ellipticity is:
&lt;/span&gt;
&lt;br/&gt;
&lt;br style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 13px;"/&gt;
&lt;span style="font-family: Courier New, Courier, monospace;"&gt;
 &lt;span style="background-color: white; color: #222222; font-size: 13px;"&gt;
  FWHM = sqrt(FWHM_min * FWHM_max)
 &lt;/span&gt;
 &lt;br style="background-color: white; color: #222222; font-size: 13px;"/&gt;
 &lt;span style="background-color: white; color: #222222; font-size: 13px;"&gt;
  e = FWHM_max/FWHM_min
 &lt;/span&gt;
&lt;/span&gt;
&lt;br/&gt;
&lt;span style="background-color: white; color: #222222; font-family: arial, sans-serif; font-size: 13px;"&gt;
 &lt;br/&gt;
&lt;/span&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 18 Jan 2013 00:58:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2013-01-18:/2013/01/elliptic-beams-fwhm-and-ellipticity.html</guid><category>astrophysics</category></item><item><title>Ubuntu PPA for HEALPix and healpy</title><link>http://zonca.github.io/2012/12/ubuntu-ppa-for-healpix-and-healpy.html</link><description>&lt;p&gt;&lt;br/&gt;
&lt;b&gt;
 HEALPix C, C++
&lt;/b&gt;
version 3.00 and
&lt;b&gt;
 healpy
&lt;/b&gt;
version 1.4.1 are now available in a PPA repository for Ubuntu 12.04 Precise and Ubuntu 12.10 Quantal.
&lt;br/&gt;
&lt;br/&gt;
First remove your previous version of
&lt;span style="font-family: Courier New, Courier, monospace;"&gt;
 healpy
&lt;/span&gt;
, just find the location of the package:
&lt;br/&gt;
&lt;br/&gt;
&lt;span style="font-family: Courier New, Courier, monospace;"&gt;
 &amp;gt; python -c "import healpy; print healpy.&lt;strong&gt;file …&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 17 Dec 2012 10:37:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2012-12-17:/2012/12/ubuntu-ppa-for-healpix-and-healpy.html</guid><category>healpix</category><category>ubuntu</category></item><item><title>Butterworth filter with Python</title><link>http://zonca.github.io/2012/10/butterworth-filter-with-python.html</link><description>&lt;p&gt;
 Using IPython notebook of course:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;a href="http://nbviewer.ipython.org/3843014/"&gt;
  http://nbviewer.ipython.org/3843014/
 &lt;/a&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Sat, 06 Oct 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2012-10-06:/2012/10/butterworth-filter-with-python.html</guid><category>ipython</category><category>scipy</category><category>python</category></item><item><title>IPython.parallel for Planck data analysis at NERSC</title><link>http://zonca.github.io/2012/09/ipythonparallel-for-planck-data.html</link><description>&lt;p&gt;&lt;a href="http://www.esa.int/planck"&gt;
 Planck
&lt;/a&gt;
is a Space mission for high precision measurements of the
&lt;a href="http://en.wikipedia.org/wiki/Cosmic_microwave_background_radiation"&gt;
 Cosmic Microwave Background
&lt;/a&gt;
(CMB), data are received as timestreams of output voltages from the 2 instruments on-board, the Low and High Frequency Instruments [LFI / HFI].
&lt;br/&gt;
&lt;br/&gt;
The key phase in data reduction is map-making, where data are binned to a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 27 Sep 2012 06:24:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2012-09-27:/2012/09/ipythonparallel-for-planck-data.html</guid><category>ipython</category><category>python</category><category>Planck</category></item><item><title>homepage on about.me</title><link>http://zonca.github.io/2012/09/homepage-on-aboutme.html</link><description>&lt;p&gt;
 moved my homepage to about.me:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;a href="http://about.me/andreazonca"&gt;
  http://about.me/andreazonca
 &lt;/a&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 it is quite nice, and essential, as most of it is just links to other websites, i.e. arXiv for publications, Linkedin for CV, github for code.
 &lt;br/&gt;
 So I'm going to use andreazonca.com as blog, hosted on blogger.
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 26 Sep 2012 22:19:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2012-09-26:/2012/09/homepage-on-aboutme.html</guid></item><item><title>doctests and unittests happiness 2</title><link>http://zonca.github.io/2012/08/doctests-and-unittests-happiness-2.html</link><description>&lt;blockquote&gt;
 nosetests -v --with-doctest
 &lt;br/&gt;
 Doctest: healpy.pixelfunc.ang2pix ... ok
 &lt;br/&gt;
 Doctest: healpy.pixelfunc.get_all_neighbours ... ok
 &lt;br/&gt;
 Doctest: healpy.pixelfunc.get_interp_val ... ok
 &lt;br/&gt;
 Doctest: healpy.pixelfunc.get_map_size ... ok
 &lt;br/&gt;
 Doctest: healpy.pixelfunc.get_min_valid_nside ... ok
 &lt;br/&gt;
 Doctest: healpy.pixelfunc.get_neighbours ... ok
&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;
&lt;a name="more"&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;blockquote&gt;
 Doctest: healpy.pixelfunc.isnpixok ... ok
 &lt;br/&gt;
 Doctest: healpy.pixelfunc.isnsideok ... ok
 &lt;br/&gt;
 Doctest: healpy.pixelfunc.ma ... ok
 &lt;br/&gt;
 Doctest: healpy …&lt;/blockquote&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 16 Aug 2012 14:07:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2012-08-16:/2012/08/doctests-and-unittests-happiness-2.html</guid><category>python</category><category>Quote</category></item><item><title>compile python module with mpi support</title><link>http://zonca.github.io/2012/07/compile-python-module-with-mpi-support.html</link><description>&lt;p&gt;
 CC=mpicc LDSHARED="mpicc -shared" python setup.py build_ext -i
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 06 Jul 2012 16:08:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2012-07-06:/2012/07/compile-python-module-with-mpi-support.html</guid></item><item><title>some python resources</title><link>http://zonca.github.io/2011/11/some-python-resources.html</link><description>&lt;p&gt;
 python tutorial:
 &lt;br/&gt;
 &lt;a href="http://docs.python.org/tutorial/"&gt;
  http://docs.python.org/tutorial/
  &lt;br/&gt;
 &lt;/a&gt;
 numpy tutorial [arrays]:
 &lt;br/&gt;
 &lt;a href="http://www.scipy.org/Tentative_NumPy_Tutorial"&gt;
  http://www.scipy.org/Tentative_NumPy_Tutorial
  &lt;br/&gt;
 &lt;/a&gt;
 plotting tutorial:
 &lt;br/&gt;
 &lt;a href="http://matplotlib.sourceforge.net/users/pyplot_tutorial.html"&gt;
  http://matplotlib.sourceforge.net/users/pyplot_tutorial.html
 &lt;/a&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 free online books:
 &lt;br/&gt;
 &lt;a href="http://diveintopython.org/toc/index.html"&gt;
  http://diveintopython.org/toc/index.html
  &lt;br/&gt;
 &lt;/a&gt;
 &lt;a href="http://www.ibiblio.org/swaroopch/byteofpython/read/"&gt;
  http://www.ibiblio.org/swaroopch/byteofpython/read/
 &lt;/a&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 install enthought python:
 &lt;br/&gt;
 &lt;a href="http://www.enthought.com/products/edudownload.php"&gt;
  http://www.enthought.com/products/edudownload.php …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 01 Nov 2011 23:02:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-11-01:/2011/11/some-python-resources.html</guid><category>python</category></item><item><title>cfitsio wrapper in python</title><link>http://zonca.github.io/2011/06/cfitsio-wrapper-in-python.html</link><description>&lt;p&gt;
 After several issues with pyfits, and tired of it being so overengineered, I've wrote my own fits I/O package in python, wrapping the C library cfitsio with ctypes.
 &lt;br/&gt;
 &lt;br/&gt;
 Pretty easy, first version completely developed in 1 day.
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;a href="https://github.com/zonca/pycfitsio"&gt;
  https://github.com/zonca/pycfitsio
 &lt;/a&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 21 Jun 2011 04:43:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-06-21:/2011/06/cfitsio-wrapper-in-python.html</guid><category>python</category><category>numpy</category></item><item><title>unit testing happiness</title><link>http://zonca.github.io/2011/06/unit-testing-happiness.html</link><description>&lt;pre&gt;nosetests -v&lt;br/&gt;test_all_cols (pycfitsio.test.TestPyCfitsIoRead) ... ok&lt;br/&gt;test_colnames (pycfitsio.test.TestPyCfitsIoRead) ... ok&lt;br/&gt;test_move (pycfitsio.test.TestPyCfitsIoRead) ... ok&lt;br/&gt;test_open_file (pycfitsio.test.TestPyCfitsIoRead) ... ok&lt;br/&gt;test_read_col (pycfitsio.test.TestPyCfitsIoRead) ... ok&lt;br/&gt;test_read_hdus (pycfitsio.test.TestPyCfitsIoRead) ... ok&lt;br/&gt;test_create (pycfitsio.test.TestPyCfitsIoWrite) ... ok&lt;br/&gt;test_write (pycfitsio.test.TestPyCfitsIoWrite) ... ok&lt;br/&gt;&lt;br/&gt;----------------------------------------------------------------------&lt;br/&gt;Ran 8 tests in 0.016s&lt;br/&gt;&lt;br/&gt;OK&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 21 Jun 2011 04:39:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-06-21:/2011/06/unit-testing-happiness.html</guid><category>python</category></item><item><title>Pink noise (1/f noise) simulations in numpy</title><link>http://zonca.github.io/2011/05/pink-noise-1f-noise-simulations-in-numpy.html</link><description>&lt;p&gt;&lt;a href="https://gist.github.com/979729"&gt;
 https://gist.github.com/979729
&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://zonca.github.io/images/pink-noise-1f-noise-simulations-in-numpy_05_oneoverf1.png"&gt;
 &lt;img alt="" class="alignnone size-medium wp-image-128" height="225" src="http://zonca.github.io/images/pink-noise-1f-noise-simulations-in-numpy_05_oneoverf1.png" title="oneoverf" width="300"/&gt;
&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 18 May 2011 23:49:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-05-18:/2011/05/pink-noise-1f-noise-simulations-in-numpy.html</guid><category>python</category><category>physics</category></item><item><title>Vim regular expressions</title><link>http://zonca.github.io/2011/04/vim-regular-expressions.html</link><description>&lt;p&gt;
 very good reference of the usage of regular expressions in VIM:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;a href="http://www.softpanorama.org/Editors/Vimorama/vim_regular_expressions.shtml"&gt;
  http://www.softpanorama.org/Editors/Vimorama/vim_regular_expressions.shtml
 &lt;/a&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 29 Apr 2011 02:14:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-04-29:/2011/04/vim-regular-expressions.html</guid><category>linux</category></item><item><title>set python logging level</title><link>http://zonca.github.io/2011/04/set-python-logging-level.html</link><description>&lt;p&gt;
 often using logging.basicConfig is useless because if the logging module is already configured upfront by one of the imported libraries this is ignored.
 &lt;br/&gt;
 &lt;br/&gt;
 The solution is to set the level directly in the root logger:
 &lt;br/&gt;
 &lt;code&gt;
  ﻿﻿logging.root.level = logging.DEBUG
 &lt;/code&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 13 Apr 2011 01:02:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-04-13:/2011/04/set-python-logging-level.html</guid><category>python</category></item><item><title>pyfits memory leak in new_table</title><link>http://zonca.github.io/2011/03/pyfits-memory-leak-in-newtable.html</link><description>&lt;p&gt;
 I found a memory leakage issue in pyfits.new_table, data were NOT deleted when the table was deleted, I prepared a test on github, using
 &lt;a href="http://mg.pov.lt/objgraph/" title="objgraph"&gt;
  objgraph
 &lt;/a&gt;
 , which shows that data are still in memory:
 &lt;br/&gt;
 &lt;a name="more"&gt;
 &lt;/a&gt;
 &lt;a href="https://gist.github.com/884298"&gt;
  https://gist.github.com/884298
 &lt;/a&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 the issue was solved by Erik Bray of STSCI on March …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 28 Mar 2011 17:22:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-03-28:/2011/03/pyfits-memory-leak-in-newtable.html</guid><category>python</category><category>astrophysics</category></item><item><title>ipython and PyTrilinos</title><link>http://zonca.github.io/2011/02/ipython-and-pytrilinos.html</link><description>&lt;ol&gt;
 &lt;br/&gt;
 &lt;li&gt;
  start ipcontroller
 &lt;/li&gt;
 &lt;br/&gt;
 &lt;li&gt;
  start ipengines:
  &lt;br/&gt;
  &lt;code&gt;
   mpiexec -n 4 ipengine --mpi=pytrilinos
  &lt;/code&gt;
 &lt;/li&gt;
 &lt;br/&gt;
 &lt;li&gt;
  start ipython 0.11:
  &lt;br/&gt;
  &lt;code&gt;
   import PyTrilinos
   &lt;br/&gt;
   from IPython.kernel import client
   &lt;br/&gt;
   mec = client.MultiEngineClient()
   &lt;br/&gt;
   %load_ext parallelmagic
   &lt;br/&gt;
   mec.activate()
   &lt;br/&gt;
   px import PyTrilinos
   &lt;br/&gt;
   px comm=PyTrilinos.Epetra.PyComm()
   &lt;br/&gt;
   px print(comm.NumProc())
  &lt;/code&gt;
 &lt;/li&gt;
 &lt;br/&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 16 Feb 2011 19:10:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-02-16:/2011/02/ipython-and-pytrilinos.html</guid><category>parallel programming</category><category>python</category></item><item><title>git make local branch tracking origin</title><link>http://zonca.github.io/2011/02/git-make-local-branch-tracking-origin.html</link><description>&lt;p&gt;&lt;code&gt;
 git branch --set-upstream master origin/master
&lt;/code&gt;
&lt;br/&gt;
&lt;br/&gt;
you obtain the same result as initial cloning&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 02 Feb 2011 02:58:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-02-02:/2011/02/git-make-local-branch-tracking-origin.html</guid><category>git</category></item><item><title>memory map npy files</title><link>http://zonca.github.io/2011/01/memory-map-npy-files.html</link><description>&lt;p&gt;
 Mem-map the stored array, and then access the second row directly from disk:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;code&gt;
  X = np.load('/tmp/123.npy', mmap_mode='r')
 &lt;/code&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 07 Jan 2011 21:04:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2011-01-07:/2011/01/memory-map-npy-files.html</guid><category>python</category><category>numpy</category></item><item><title>force local install of python module</title><link>http://zonca.github.io/2010/12/force-local-install-of-python-module.html</link><description>&lt;p&gt;&lt;code&gt;
 python setup.py install --prefix FOLDER
 &lt;br/&gt;
&lt;/code&gt;
&lt;br/&gt;
&lt;br/&gt;
creates lib/python2.6/site-packages, to force a local install you should use:
&lt;br/&gt;
&lt;br/&gt;
&lt;code&gt;
 python setup.py install --install-lib FOLDER
&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 03 Dec 2010 22:18:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-12-03:/2010/12/force-local-install-of-python-module.html</guid><category>python</category></item><item><title>gnome alt f2 popup launcher</title><link>http://zonca.github.io/2010/08/gnome-alt-f2-popup-launcher.html</link><description>&lt;p&gt;
 ﻿
 &lt;br/&gt;
 &lt;code&gt;
  gnome-panel-control --run-dialog
 &lt;/code&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 31 Aug 2010 18:14:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-08-31:/2010/08/gnome-alt-f2-popup-launcher.html</guid><category>linux</category><category>ubuntu</category></item><item><title>switch to interactive backend with ipython -pylab</title><link>http://zonca.github.io/2010/08/switch-to-interactive-backend-with.html</link><description>&lt;p&gt;
 objective:
 &lt;br/&gt;
&lt;/p&gt;

&lt;ol&gt;
 &lt;br/&gt;
 &lt;li&gt;
  when running ipython without pylab or executing scripts you want to use an image matplotlib backend like Agg
 &lt;/li&gt;
 &lt;br/&gt;
 &lt;li&gt;
  just when calling ipython -pylab you want to use an interactive backend like GTKAgg or TKAgg
 &lt;/li&gt;
 &lt;br/&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br/&gt;
&lt;a name="more"&gt;
&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;
you need first to setup as default backend on .matplotlib/matplotlibrc
&lt;strong&gt;
 Agg
&lt;/strong&gt;
:
&lt;br/&gt;
&lt;code&gt;
 backend      : Agg
&lt;/code&gt;
&lt;br/&gt;
then …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Sat, 21 Aug 2010 00:33:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-08-21:/2010/08/switch-to-interactive-backend-with.html</guid><category>python</category></item><item><title>numpy dtypes and fits keywords</title><link>http://zonca.github.io/2010/08/numpy-dtypes-and-fits-keywords.html</link><description>&lt;p&gt;&lt;code&gt;
 bool: 'L',
 &lt;br/&gt;
 uint8: 'B',
 &lt;br/&gt;
 int16: 'I',
 &lt;br/&gt;
 int32: 'J',
 &lt;br/&gt;
 int64: 'K',
 &lt;br/&gt;
 float32: 'E',
 &lt;br/&gt;
 float64: 'D',
 &lt;br/&gt;
 complex64: 'C',
 &lt;br/&gt;
 complex128: 'M'
&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 04 Aug 2010 21:57:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-08-04:/2010/08/numpy-dtypes-and-fits-keywords.html</guid><category>python</category><category>numpy</category></item><item><title>count hits with numpy</title><link>http://zonca.github.io/2010/07/count-hits-with-numpy.html</link><description>&lt;p&gt;
 I have an array where I record hits
 &lt;br/&gt;
 &lt;code&gt;
  a=np.zeros(5)
 &lt;/code&gt;
 &lt;br/&gt;
 and an array with the indices of the hits, for example I have 2 hits on index 2
 &lt;br/&gt;
 &lt;code&gt;
  hits=np.array([2,2])
 &lt;/code&gt;
 &lt;br/&gt;
 so I want to increase index 2 of a by 2
 &lt;br/&gt;
 &lt;a name="more"&gt;
 &lt;/a&gt;
 &lt;br/&gt;
 I tried:
 &lt;br/&gt;
 &lt;code&gt;
  a[hits …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 23 Jul 2010 15:18:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-07-23:/2010/07/count-hits-with-numpy.html</guid><category>python</category><category>numpy</category></item><item><title>change column name in a fits with pyfits</title><link>http://zonca.github.io/2010/06/change-column-name-in-fits-with-pyfits.html</link><description>&lt;p&gt;
 no way to change it manipulating the dtype of the data array.
 &lt;br/&gt;
 &lt;code&gt;
  a=pyfits.open('filename.fits')
  &lt;br/&gt;
  a[1].header.update('TTYPE1','newname')
 &lt;/code&gt;
 &lt;br/&gt;
 you need to change the header, using the update method of the right TTYPE and then write again the fits file using a.writeto.
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 30 Jun 2010 22:06:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-06-30:/2010/06/change-column-name-in-fits-with-pyfits.html</guid><category>python</category></item><item><title>healpix coordinates</title><link>http://zonca.github.io/2010/06/healpix-coordinates.html</link><description>&lt;p&gt;
 Healpix considers
 &lt;strong&gt;
  latitude
 &lt;/strong&gt;
 theta from 0 on north pole to pi south pole,
 &lt;br/&gt;
 so the conversion is:
 &lt;br/&gt;
 &lt;code&gt;
  theta = pi/2 - latitude
 &lt;/code&gt;
 &lt;br/&gt;
 &lt;strong&gt;
  longitude
 &lt;/strong&gt;
 and phi instead are consistently from 0 to 2*pi with
 &lt;br/&gt;
&lt;/p&gt;

&lt;ul&gt;
 &lt;br/&gt;
 &lt;li&gt;
  zero on vernal equinox (for
  &lt;a href="http://en.wikipedia.org/wiki/Ecliptic_coordinate_system"&gt;
   ecliptic
  &lt;/a&gt;
  ).
 &lt;/li&gt;
 &lt;br/&gt;
 &lt;li&gt;
  zero in the direction from Sun to galactic center (for
  &lt;a href="http://en.wikipedia.org/wiki/Galactic_coordinate_system"&gt;
   galactic …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 23 Jun 2010 01:01:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-06-23:/2010/06/healpix-coordinates.html</guid><category>astrophysics</category><category>physics</category></item><item><title>parallel computing the python way</title><link>http://zonca.github.io/2010/06/parallel-computing-python-way.html</link><description>&lt;p&gt;
 forget MPI:
 &lt;br/&gt;
 &lt;a href="http://showmedo.com/videotutorials/series?name=N49qyIFOh"&gt;
  http://showmedo.com/videotutorials/series?name=N49qyIFOh
 &lt;/a&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 21 Jun 2010 07:27:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-06-21:/2010/06/parallel-computing-python-way.html</guid><category>parallel programming</category><category>python</category></item><item><title>quaternions for python</title><link>http://zonca.github.io/2010/06/quaternions-for-python.html</link><description>&lt;p&gt;
 the situation is pretty problematic, I hope someday
 &lt;strong&gt;
  scipy
 &lt;/strong&gt;
 will add a python package for rotating and interpolating quaternions, up to now:
 &lt;br/&gt;
&lt;/p&gt;

&lt;ul&gt;
 &lt;br/&gt;
 &lt;li&gt;
  &lt;a href="http://cgkit.sourceforge.net/doc2/quat.html"&gt;
   http://cgkit.sourceforge.net/doc2/quat.html
  &lt;/a&gt;
  : slow, bad interaction with numpy, I could not find a simple way to turn a list of N quaternions to a …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 21 Jun 2010 07:21:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-06-21:/2010/06/quaternions-for-python.html</guid><category>python</category><category>physics</category></item><item><title>change permission recursively to folders only</title><link>http://zonca.github.io/2010/03/change-permission-recursively-to.html</link><description>&lt;p&gt;&lt;code&gt;
 find . -type d -exec chmod 777 {} \;
&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 23 Mar 2010 17:58:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-03-23:/2010/03/change-permission-recursively-to.html</guid><category>linux</category></item><item><title>aptitude search 'and'</title><link>http://zonca.github.io/2010/03/aptitude-search.html</link><description>&lt;p&gt;
 this is really something
 &lt;strong&gt;
  really annoying
 &lt;/strong&gt;
 about aptitude, if you run:
 &lt;br/&gt;
 &lt;code&gt;
  aptitude search linux headers
 &lt;/code&gt;
 &lt;br/&gt;
 it will make an 'or' search...to perform a 'and' search, which I need 99.9% of the time, you need quotation marks:
 &lt;br/&gt;
 &lt;code&gt;
  aptitude search 'linux headers'
 &lt;/code&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 16 Mar 2010 22:50:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-03-16:/2010/03/aptitude-search.html</guid><category>linux</category><category>ubuntu</category></item><item><title>using numpy dtype with loadtxt</title><link>http://zonca.github.io/2010/03/using-numpy-dtype-with-loadtxt.html</link><description>&lt;p&gt;
 Let's say you want to read a text file like this:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;br/&gt;
&lt;/p&gt;

&lt;blockquote&gt;
 #filename start end
 &lt;br/&gt;
 fdsafda.fits 23143214 23143214
 &lt;br/&gt;
 safdsafafds.fits 21423 23423432
&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;a name="more"&gt;
&lt;/a&gt;
&lt;br/&gt;
you can use dtype to create a custom array, which is very flexible as you can work by row or columns with strings and floats in the same …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 03 Mar 2010 22:49:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-03-03:/2010/03/using-numpy-dtype-with-loadtxt.html</guid><category>linux</category><category>python</category><category>numpy</category></item><item><title>Stop ipcluster from a script</title><link>http://zonca.github.io/2010/02/stop-ipcluster-from-script.html</link><description>&lt;p&gt;
 Ipcluster is easy to start but not trivial to stop from a script, after having finished the processing, here's the solution:
 &lt;br/&gt;
 &lt;code&gt;
  from IPython.kernel import client
  &lt;br/&gt;
  mec = client.MultiEngineClient()
  &lt;br/&gt;
  mec.kill(controller=True)
 &lt;/code&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 19 Feb 2010 02:23:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-02-19:/2010/02/stop-ipcluster-from-script.html</guid><category>parallel programming</category><category>python</category></item><item><title>Correlation</title><link>http://zonca.github.io/2010/01/correlation.html</link><description>&lt;p&gt;&lt;strong&gt;
 Expectation value
&lt;/strong&gt;
or first moment of a random variable is the probability weighted sum of the possible values (weighted mean).
&lt;br/&gt;
Expectation value of a 6-dice is 1+2+3+4+5+6 / 6 = 3.5
&lt;br/&gt;
&lt;br/&gt;
&lt;strong&gt;
 Covariance
&lt;/strong&gt;
of 2 random variables is:
&lt;br/&gt;
&lt;code&gt;
 COV(X,Y)=E[(X-E(X))(Y-E(Y))]=E …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 28 Jan 2010 00:45:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-01-28:/2010/01/correlation.html</guid><category>physics</category></item><item><title>execute bash script remotely with ssh</title><link>http://zonca.github.io/2010/01/execute-bash-script-remotely-with-ssh.html</link><description>&lt;p&gt;
 a bash script launched remotely via ssh does not load the environment, if this is an issue it is necessary to specify --login when calling bash:
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;code&gt;
  ssh user@remoteserver.com 'bash --login life_om/cronodproc' | mail your@email.com -s cronodproc
 &lt;/code&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 07 Jan 2010 14:37:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-01-07:/2010/01/execute-bash-script-remotely-with-ssh.html</guid><category>linux</category><category>bash</category></item><item><title>lock pin hold a package using apt on ubuntu</title><link>http://zonca.github.io/2010/01/lock-pin-hold-package-using-apt-on.html</link><description>&lt;p&gt;
 set hold:
 &lt;br/&gt;
 &lt;code&gt;
  echo packagename hold | dpkg --set-selections
 &lt;/code&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 check, should be
 &lt;strong&gt;
  hi
 &lt;/strong&gt;
 :
 &lt;br/&gt;
 &lt;code&gt;
  dpkg -l packagename
 &lt;/code&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 unset hold:
 &lt;br/&gt;
 &lt;code&gt;
  echo packagename install | dpkg --set-selections
 &lt;/code&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 07 Jan 2010 13:49:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-01-07:/2010/01/lock-pin-hold-package-using-apt-on.html</guid><category>linux</category><category>ubuntu</category></item><item><title>load arrays from a text file with numpy</title><link>http://zonca.github.io/2010/01/load-arrays-from-text-file-with-numpy.html</link><description>&lt;p&gt;
 space separated text file with 5 arrays in columns:
 &lt;br/&gt;
 &lt;br/&gt;
 [sourcecode language="python"]
 &lt;br/&gt;
 ods,rings,gains,offsets,rparams = np.loadtxt(filename,unpack=True)
 &lt;br/&gt;
 [/sourcecode]
 &lt;br/&gt;
 &lt;br/&gt;
 quite impressive...
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 05 Jan 2010 16:32:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2010-01-05:/2010/01/load-arrays-from-text-file-with-numpy.html</guid><category>python</category><category>numpy</category></item><item><title>Latest Maxima and WxMaxima for Ubuntu Karmic</title><link>http://zonca.github.io/2009/12/latest-maxima-and-wxmaxima-for-ubuntu.html</link><description>&lt;p&gt;&lt;a href="http://zeus.nyf.hu/~blahota/maxima/karmic/" title="maxima for ubuntu"&gt;
 http://zeus.nyf.hu/~blahota/maxima/karmic/
&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;
on maxima mailing lists they suggested to install the sbcl built, so I first installed sbcl from the Ubuntu repositories and then maxima and wxmaxima f
&lt;br/&gt;
rom this url.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 15 Dec 2009 11:20:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2009-12-15:/2009/12/latest-maxima-and-wxmaxima-for-ubuntu.html</guid><category>linux</category><category>maxima</category><category>ubuntu</category></item><item><title>number of files in a folder and subfolders</title><link>http://zonca.github.io/2009/12/number-of-files-in-folder-and-subfolders.html</link><description>&lt;p&gt;
 folders are not counted
 &lt;br/&gt;
 &lt;code&gt;
  find . -type f | wc -l
 &lt;/code&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Thu, 10 Dec 2009 18:16:00 -0800</pubDate><guid isPermaLink="false">tag:zonca.github.io,2009-12-10:/2009/12/number-of-files-in-folder-and-subfolders.html</guid><category>linux</category><category>bash</category></item><item><title>forcefully unmount a disk partition</title><link>http://zonca.github.io/2008/09/forcefully-unmount-disk-partition.html</link><description>&lt;p&gt;
 check which processes are accessing a partition:
 &lt;br/&gt;
 &lt;br/&gt;
 [sourcecode language="python"]lsof | grep '/opt'[/sourcecode]
 &lt;br/&gt;
 &lt;br/&gt;
 kill all the processes accessing the partition (check what you're killing, you could loose data):
 &lt;br/&gt;
 &lt;br/&gt;
 [sourcecode language="python"]fuser -km /mnt[/sourcecode]
 &lt;br/&gt;
 &lt;br/&gt;
 try to unmount now:
 &lt;br/&gt;
 [sourcecode language="python"]umount /opt[/sourcecode]
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 17 Sep 2008 15:14:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2008-09-17:/2008/09/forcefully-unmount-disk-partition.html</guid><category>linux</category></item><item><title>netcat: quickly send binaries through network</title><link>http://zonca.github.io/2008/04/netcat-quickly-send-binaries-through.html</link><description>&lt;p&gt;
 just start nc in server mode on localhost:
 &lt;br/&gt;
 &lt;br/&gt;
 [sourcecode language='python'] nc -l -p 3333 [/sourcecode]
 &lt;br/&gt;
 &lt;br/&gt;
 send a string to localhost on port 3333:
 &lt;br/&gt;
 &lt;br/&gt;
 [sourcecode language='python'] echo "hello world" | nc localhost 3333 [/sourcecode]
 &lt;br/&gt;
 &lt;br/&gt;
 you'll see on server side appearing the string you sent.
 &lt;br/&gt;
 &lt;br/&gt;
 very useful for sending binaries, see …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 29 Apr 2008 12:25:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2008-04-29:/2008/04/netcat-quickly-send-binaries-through.html</guid><category>linux</category></item><item><title>Decibels, dB and dBm, in terms of Power and Amplitude</title><link>http://zonca.github.io/2008/03/decibels-db-and-dbm-in-terms-of-power.html</link><description>&lt;p&gt;
 It's not difficult, just always having some doubts...
 &lt;br/&gt;
&lt;/p&gt;

&lt;h4&gt;
 Power
&lt;/h4&gt;

&lt;p&gt;&lt;br/&gt;
$latex L_{dB} = 10 log_{10} \left( \dfrac{P_1}{P_0} \right) $
&lt;br/&gt;
&lt;br/&gt;
10 dB increase for a factor 10 increase in the ratio
&lt;br/&gt;
&lt;br/&gt;
3 dB = doubling
&lt;br/&gt;
&lt;br/&gt;
40 dB = 10000 times
&lt;br/&gt;
&lt;h4&gt;
 Amplitude
&lt;/h4&gt;
&lt;br/&gt;
$latex L_{dB} = 10 log_{10} \left( \dfrac{A_1^2}{A_0 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Sat, 29 Mar 2008 02:13:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2008-03-29:/2008/03/decibels-db-and-dbm-in-terms-of-power.html</guid><category>general physics</category><category>physics</category></item><item><title>Relation between Power density and temperature in an antenna</title><link>http://zonca.github.io/2008/03/relation-between-power-density-and.html</link><description>&lt;p&gt;
 Considering an antenna placed inside a blackbody enclosure at temperature T, the power received per unit bandwidth is:
 &lt;br/&gt;
 $latex \omega = kT$
 &lt;br/&gt;
 &lt;br/&gt;
 where k is Boltzmann constant.
 &lt;br/&gt;
 &lt;br/&gt;
 This relationship derives from considering a constant brightness $latex B$ in all directions, therefore Rayleigh Jeans law tells:
 &lt;br/&gt;
 &lt;br/&gt;
 $latex B = \dfrac{2kT}{\lambda^2 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 28 Mar 2008 18:29:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2008-03-28:/2008/03/relation-between-power-density-and.html</guid><category>astrophysics</category><category>physics</category></item><item><title>Producing PDF from XML files</title><link>http://zonca.github.io/2008/03/producing-pdf-from-xml-files.html</link><description>&lt;p&gt;
 I need to produce formatted pdf from XML data input file.
 &lt;br/&gt;
 The more standard way looks like to use
 &lt;a href="http://www.w3schools.com/xsl" title="w3schools tutorial"&gt;
  XSL stylesheets.
 &lt;/a&gt;
 &lt;br/&gt;
 Associating a XSL sheet to an XML file permits most browsers to render them directly as HMTL, this can be used for web publishing XML sheets.
 &lt;br/&gt;
 &lt;br/&gt;
 The quick and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 28 Mar 2008 16:27:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2008-03-28:/2008/03/producing-pdf-from-xml-files.html</guid><category>linux</category></item><item><title>vim costumization</title><link>http://zonca.github.io/2006/10/vim-costumization.html</link><description>&lt;p&gt;
 it is about perl but it suggests very useful tricks for programming with vim
 &lt;br/&gt;
 http://mamchenkov.net/wordpress/2004/05/10/vim-for-perl-developers/
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 17 Oct 2006 10:49:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-10-17:/2006/10/vim-costumization.html</guid><category>linux</category></item><item><title>using gnu find</title><link>http://zonca.github.io/2006/10/using-gnu-find.html</link><description>&lt;p&gt;
 list all the directories excluding ".":
 &lt;br/&gt;
&lt;/p&gt;

&lt;blockquote&gt;
 find . -maxdepth 1 -type d -not -name ".*"
&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;
find some string in all files matching a pattern in the subfolders (with grep -r you cannot specify the type of file)
&lt;br/&gt;
&lt;blockquote&gt;
 find . -name '*.py' -exec grep -i pdb '{}' \;
&lt;/blockquote&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 03 Oct 2006 14:00:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-10-03:/2006/10/using-gnu-find.html</guid><category>linux</category><category>bash</category></item><item><title>beginners bash guide</title><link>http://zonca.github.io/2006/10/beginners-bash-guide.html</link><description>&lt;p&gt;
 great guide with many examples:
 &lt;br/&gt;
 &lt;br/&gt;
 http://tille.xalasys.com/training/bash/
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Tue, 03 Oct 2006 13:56:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-10-03:/2006/10/beginners-bash-guide.html</guid><category>linux</category><category>bash</category></item><item><title>tar quickref</title><link>http://zonca.github.io/2006/09/tar-quickref.html</link><description>&lt;p&gt;
 compress: tar cvzf foo.tgz *.cc *.h
 &lt;br/&gt;
 check inside: tar tzf foo.tgz | grep file.txt
 &lt;br/&gt;
 extract: tar xvzf foo.tgz
 &lt;br/&gt;
 extract 1 file only: tar xvzf foo.tgz path/to/file.txt
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 25 Sep 2006 13:19:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-09-25:/2006/09/tar-quickref.html</guid><category>linux</category><category>bash</category></item><item><title>software carpentry</title><link>http://zonca.github.io/2006/09/software-carpentry.html</link><description>&lt;p&gt;
 basic software for scientists and engineers:
 &lt;br/&gt;
 http://www.swc.scipy.org/
 &lt;br/&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Mon, 25 Sep 2006 12:51:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-09-25:/2006/09/software-carpentry.html</guid><category>linux</category><category>physics</category></item><item><title>Software libero per il trattamento di dati scientifici</title><link>http://zonca.github.io/2006/09/software-libero-per-il-trattamento-di.html</link><description>&lt;p&gt;
 nella ricerca del miglior ambiente per analisi di dati scientifici da leggere questi articoli:
 &lt;br/&gt;
 &lt;br/&gt;
 http://www.pluto.it/files/journal/pj0501/swlibero-scie1.html
 &lt;br/&gt;
 &lt;br/&gt;
 http://www.pluto.it/files/journal/pj0504/swlibero-scie2.html
 &lt;br/&gt;
 &lt;br/&gt;
 http://www.pluto.it/files/journal/pj0505/swlibero-scie3.html
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 22 Sep 2006 13:35:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-09-22:/2006/09/software-libero-per-il-trattamento-di.html</guid><category>italian</category><category>linux</category><category>physics</category></item><item><title>command line processing</title><link>http://zonca.github.io/2006/09/command-line-processing.html</link><description>&lt;p&gt;
 Very useful summary of many linux command line processing tools (great perl onliners)
 &lt;br/&gt;
 &lt;br/&gt;
 http://grad.physics.sunysb.edu/~leckey/personal/forget/
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 22 Sep 2006 13:34:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-09-22:/2006/09/command-line-processing.html</guid><category>linux</category><category>bash</category></item><item><title>awk made easy</title><link>http://zonca.github.io/2006/09/awk-made-easy.html</link><description>&lt;p&gt;&lt;strong&gt;
 awk '/REGEX/ {print NR "\t" $9 "\t" $4"_"$5 ;}' file.txt
&lt;/strong&gt;
&lt;br/&gt;
supports extended REGEX like perl (       e.g. [:blank:]  Space or tab characters )
&lt;br/&gt;
NR is line number
&lt;br/&gt;
NF                Number of fields
&lt;br/&gt;
$n is the column to be printed, $0 is the whole row
&lt;br/&gt;
&lt;br/&gt;
if it only necessary to print …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Fri, 22 Sep 2006 13:20:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-09-22:/2006/09/awk-made-easy.html</guid><category>linux</category><category>bash</category></item><item><title>pillole di astrofisica</title><link>http://zonca.github.io/2006/09/pillole-di-astrofisica.html</link><description>&lt;p&gt;
 curiosita' ben spiegate da annibale d'ercole, interessante l'idea di avere un livello base e un livello avanzato
 &lt;br/&gt;
 &lt;a href="http://www.bo.astro.it/sait/spigolature/spigostart.html" target="_blank" title="spigolature astronomiche"&gt;
  http://www.bo.astro.it/sait/spigolature/spigostart.html
 &lt;/a&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Zonca</dc:creator><pubDate>Wed, 20 Sep 2006 13:39:00 -0700</pubDate><guid isPermaLink="false">tag:zonca.github.io,2006-09-20:/2006/09/pillole-di-astrofisica.html</guid><category>italian</category><category>astrophysics</category><category>physics</category></item></channel></rss>